--- confirm-crypt-hook/PATCHES Dec 2002 17:44:54 -0000	3.6
+++ confirm-crypt-hook/PATCHES Feb 2004 13:19:47 -0000
@@ -0,0 +1 @@
+patch-1.5.6.dw.confirm-crypt-hook.1
--- confirm-crypt-hook/init.h Feb 2004 17:10:43 -0000	3.43
+++ confirm-crypt-hook/init.h Feb 2004 13:19:48 -0000
@@ -1230,2 +1230,11 @@ struct option_t MuttVars[] = {
   */
+  { "pgp_confirmhook",		DT_SYN, R_NONE, UL "crypt_confirmhook", 1 },
+  { "crypt_confirmhook",	DT_BOOL, R_NONE, OPTCRYPTCONFIRMHOOK, 1 },
+  /*
+  ** .pp
+  ** If set, then you will be prompted for confirmation of keys when using
+  ** the \fIcrypt-hook\fP command.  If unset, no such confirmation prompt will
+  ** be presented.  This is generally considered unsafe, especially where
+  ** typos are concerned.
+  */
   { "pgp_ignore_subkeys", DT_BOOL, R_NONE, OPTPGPIGNORESUB, 1},
--- confirm-crypt-hook/mutt.h Feb 2004 17:10:43 -0000	3.23
+++ confirm-crypt-hook/mutt.h Feb 2004 13:19:48 -0000
@@ -442,2 +442,3 @@ enum
   OPTSDEFAULTDECRYPTKEY,
+  OPTCRYPTCONFIRMHOOK,
   OPTPGPIGNORESUB,
--- confirm-crypt-hook/pgp.c Sep 2003 13:03:26 -0000	3.26
+++ confirm-crypt-hook/pgp.c Feb 2004 13:19:48 -0000
@@ -1057,3 +1057,3 @@ char *pgp_findKeys (ADDRESS *to, ADDRESS
       snprintf (buf, sizeof (buf), _("Use keyID = \"%s\" for %s?"), keyID, p->mailbox);
-      if ((r = mutt_yesorno (buf, M_YES)) == M_YES)
+      if (!option(OPTCRYPTCONFIRMHOOK) || (r = mutt_yesorno (buf, M_YES)) == M_YES)
       {
