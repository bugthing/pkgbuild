--- filters.c	2011-12-26 17:03:08.000000000 +0000
+++ filters.c.1	2012-11-29 17:43:31.230834656 +0000
@@ -1016,9 +1016,10 @@
  *
  * Function    :  rewrite_url
  *
- * Description :  Rewrites a URL with a single pcrs command
- *                and returns the result if it differs from the
- *                original and isn't obviously invalid.
+ * Description :  Rewrites a URL with one or more pcrs commands and
+ *                returns the result if it differs from the original
+ *                and isn't obviously invalid.  Separate pcrs commands
+ *                with tabs.
  *
  * Parameters  :
  *          1  :  old_url = URL to rewrite.
@@ -1032,12 +1033,39 @@
 char *rewrite_url(char *old_url, const char *pcrs_command)
 {
    char *new_url = NULL;
-   int hits;
+   int hits=0;
 
    assert(old_url);
    assert(pcrs_command);
 
-   new_url = pcrs_execute_single_command(old_url, pcrs_command, &hits);
+   // Copy pcrs_command so we don't change it in the strtok_r
+   char *copy_command = malloc(strlen(pcrs_command) + 1);
+   if (copy_command==NULL)
+   {
+      log_error(LOG_LEVEL_ERROR, "Couldn't allocate memory to test for redirect.");
+      return old_url;
+   }
+   strcpy(copy_command, pcrs_command);
+
+   char *saveptr;
+   char * pch;
+   int h=0;
+   pch = strtok_r(copy_command, "\t", &saveptr);
+   char *subject;
+   subject = old_url;
+   while (pch != NULL)
+   {
+      new_url = pcrs_execute_single_command(subject, pch, &h);
+      pch = strtok_r(NULL, "\t", &saveptr);
+      hits += h;
+
+      if (subject != old_url) 
+      {
+         freez(subject);
+      }
+      subject = new_url;
+   }
+   freez(copy_command);
 
    if (hits == 0)
    {
